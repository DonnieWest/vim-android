:pmd FAILED
FAILURE: Build failed with an exception.
* What went wrong:
  Execution failed for task ':pmd'.
* Try:
  Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.
BUILD FAILED
Total time: 5.477 secs
lint: Warning /home/ryujin/Projects/Manabook/manabook-sdk/build.gradle:46:5 Not targeting the latest versions of Android; compatibility modes apply. Consider testing and updating this version. Consult the android.os.Build.VERSION_CODES javadoc for details.
      When your application runs on a version of Android that is more recent
       than your `targetSdkVersion` specifies that it has been tested with, 
      various compatibility modes kick in. This ensures that your applicatio
      n continues to work, but it may look out of place. For example, if the
       `targetSdkVersion` is less than 14, your app may get an option button
       in the UI.  To fix this issue, set the `targetSdkVersion` to the high
      est available value. Then test your app to make sure everything works 
      correctly. You may want to consult the compatibility notes to see what
       changes apply to each version you are adding support for: http://deve
      loper.android.com/reference/android/os/Build.VERSION_CODES.html
lint: Warning /home/ryujin/Projects/Manabook/manabook-sdk/src/androidTest/java/jp/co/skillupjapan/manabook/api/test/BookModelTest.java:27:19 To get local formatting use `getDateInstance()`, `getDateTimeInstance()`, or `getTimeInstance()`, or use `new SimpleDateFormat(String template, Locale locale)` with for example `Locale.US` for ASCII dates.
      Almost all callers should use `getDateInstance()`, `getDateTimeInstanc
      e()`, or `getTimeInstance()` to get a ready-made instance of SimpleDat
      eFormat suitable for the user's locale. The main reason you'd create a
      n instance this class directly is because you need to format/parse a s
      pecific machine-readable format, in which case you almost certainly wa
      nt to explicitly ask for US to ensure that you get ASCII digits (rathe
      r than, say, Arabic digits).  Therefore, you should either use the for
      m of the SimpleDateFormat constructor where you pass in an explicit lo
      cale, such as Locale.US, or use one of the get instance methods, or su
      ppress this error if really know what you are doing.
lint: Warning /home/ryujin/Projects/Manabook/manabook-sdk/src/main/java/jp/co/skillupjapan/manabook/api/models/ManabookDate.java:16:14 To get local formatting use `getDateInstance()`, `getDateTimeInstance()`, or `getTimeInstance()`, or use `new SimpleDateFormat(String template, Locale locale)` with for example `Locale.US` for ASCII dates.
      Almost all callers should use `getDateInstance()`, `getDateTimeInstanc
      e()`, or `getTimeInstance()` to get a ready-made instance of SimpleDat
      eFormat suitable for the user's locale. The main reason you'd create a
      n instance this class directly is because you need to format/parse a s
      pecific machine-readable format, in which case you almost certainly wa
      nt to explicitly ask for US to ensure that you get ASCII digits (rathe
      r than, say, Arabic digits).  Therefore, you should either use the for
      m of the SimpleDateFormat constructor where you pass in an explicit lo
      cale, such as Locale.US, or use one of the get instance methods, or su
      ppress this error if really know what you are doing.
lint: Warning /home/ryujin/Projects/Manabook/manabook-sdk/src/androidTest/java/jp/co/skillupjapan/manabook/api/test/PaymentApiTest.java:67:25 To get local formatting use `getDateInstance()`, `getDateTimeInstance()`, or `getTimeInstance()`, or use `new SimpleDateFormat(String template, Locale locale)` with for example `Locale.US` for ASCII dates.
      Almost all callers should use `getDateInstance()`, `getDateTimeInstanc
      e()`, or `getTimeInstance()` to get a ready-made instance of SimpleDat
      eFormat suitable for the user's locale. The main reason you'd create a
      n instance this class directly is because you need to format/parse a s
      pecific machine-readable format, in which case you almost certainly wa
      nt to explicitly ask for US to ensure that you get ASCII digits (rathe
      r than, say, Arabic digits).  Therefore, you should either use the for
      m of the SimpleDateFormat constructor where you pass in an explicit lo
      cale, such as Locale.US, or use one of the get instance methods, or su
      ppress this error if really know what you are doing.
lint: Warning /home/ryujin/Projects/Manabook/manabook-sdk/src/androidTest/java/jp/co/skillupjapan/manabook/api/test/PaymentApiTest.java:78:25 To get local formatting use `getDateInstance()`, `getDateTimeInstance()`, or `getTimeInstance()`, or use `new SimpleDateFormat(String template, Locale locale)` with for example `Locale.US` for ASCII dates.
      Almost all callers should use `getDateInstance()`, `getDateTimeInstanc
      e()`, or `getTimeInstance()` to get a ready-made instance of SimpleDat
      eFormat suitable for the user's locale. The main reason you'd create a
      n instance this class directly is because you need to format/parse a s
      pecific machine-readable format, in which case you almost certainly wa
      nt to explicitly ask for US to ensure that you get ASCII digits (rathe
      r than, say, Arabic digits).  Therefore, you should either use the for
      m of the SimpleDateFormat constructor where you pass in an explicit lo
      cale, such as Locale.US, or use one of the get instance methods, or su
      ppress this error if really know what you are doing.
lint: Warning /home/ryujin/Projects/Manabook/manabook-sdk/build.gradle:110:3 A newer version of com.android.support:support-annotations than 25.3.1 is available: 26.0.0-alpha1
      This detector looks for usages of libraries where the version you are 
      using is not the current stable release. Using older versions is fine,
       and there are cases where you deliberately want to stick with an olde
      r version. However, you may simply not be aware that a more recent ver
      sion is available, and that is what this lint check helps find.
lint: Error /home/ryujin/Projects/Manabook/manabook-sdk/src/androidTest/java/jp/co/skillupjapan/manabook/api/test/ResourceModelTest.java:55:25 Must be one of: 0, 3, 2, 1
      Ensures that when parameter in a method only allows a specific set of 
      constants, calls obey those rules.
lint: Error /home/ryujin/Projects/Manabook/manabook-sdk/src/androidTest/java/jp/co/skillupjapan/manabook/api/test/ResourceModelTest.java:58:25 Must be one of: 0, 3, 2, 1
      Ensures that when parameter in a method only allows a specific set of 
      constants, calls obey those rules.
lint: Error /home/ryujin/Projects/Manabook/manabook-sdk/src/androidTest/java/jp/co/skillupjapan/manabook/api/test/ResourceModelTest.java:61:25 Must be one of: 0, 3, 2, 1
      Ensures that when parameter in a method only allows a specific set of 
      constants, calls obey those rules.
lint: Error /home/ryujin/Projects/Manabook/manabook-sdk/src/androidTest/java/jp/co/skillupjapan/manabook/api/test/ResourceModelTest.java:64:25 Must be one of: 0, 3, 2, 1
      Ensures that when parameter in a method only allows a specific set of 
      constants, calls obey those rules.
lint: Error /home/ryujin/Projects/Manabook/manabook-sdk/src/androidTest/java/jp/co/skillupjapan/manabook/api/test/ResourceModelTest.java:95:25 Must be one of: 0, 3, 2, 1
      Ensures that when parameter in a method only allows a specific set of 
      constants, calls obey those rules.
lint: Error /home/ryujin/Projects/Manabook/manabook-sdk/src/androidTest/java/jp/co/skillupjapan/manabook/api/test/ResourceModelTest.java:130:25 Must be one of: 0, 3, 2, 1
      Ensures that when parameter in a method only allows a specific set of 
      constants, calls obey those rules.
lint: Error /home/ryujin/Projects/Manabook/manabook-sdk/src/androidTest/java/jp/co/skillupjapan/manabook/api/test/ResourceModelTest.java:165:25 Must be one of: 0, 3, 2, 1
      Ensures that when parameter in a method only allows a specific set of 
      constants, calls obey those rules.
lint: Error /home/ryujin/Projects/Manabook/manabook-sdk/src/androidTest/java/jp/co/skillupjapan/manabook/api/test/ResourceModelTest.java:196:25 Must be one of: 0, 3, 2, 1
      Ensures that when parameter in a method only allows a specific set of 
      constants, calls obey those rules.
lint: Error /home/ryujin/Projects/Manabook/manabook-sdk/src/androidTest/java/jp/co/skillupjapan/manabook/api/test/ResourceModelTest.java:199:25 Must be one of: 0, 3, 2, 1
      Ensures that when parameter in a method only allows a specific set of 
      constants, calls obey those rules.
lint: Error /home/ryujin/Projects/Manabook/manabook-sdk/src/androidTest/java/jp/co/skillupjapan/manabook/api/test/ResourceModelTest.java:202:25 Must be one of: 0, 3, 2, 1
      Ensures that when parameter in a method only allows a specific set of 
      constants, calls obey those rules.
lint: Error /home/ryujin/Projects/Manabook/manabook-sdk/src/androidTest/java/jp/co/skillupjapan/manabook/api/test/ResourceModelTest.java:205:25 Must be one of: 0, 3, 2, 1
      Ensures that when parameter in a method only allows a specific set of 
      constants, calls obey those rules.
lint: Error /home/ryujin/Projects/Manabook/manabook-sdk/src/androidTest/java/jp/co/skillupjapan/manabook/api/test/SNSApiTest.java:19:18 Must be one of: 
      Ensures that when parameter in a method only allows a specific set of 
      constants, calls obey those rules.
pmd: warning /home/ryujin/Projects/Manabook/manabook-sdk/src/androidTest/java/jp/co/skillupjapan/manabook/api/test/BookApiTest.java:6:1 Avoid unused imports such as 'jp.co.skillupjapan.manabook.api.util.Constants'
pmd: warning /home/ryujin/Projects/Manabook/manabook-sdk/src/androidTest/java/jp/co/skillupjapan/manabook/api/test/CategoryApiTest.java:5:1 Avoid unused imports such as 'android.test.InstrumentationTestCase'
pmd: warning /home/ryujin/Projects/Manabook/manabook-sdk/src/androidTest/java/jp/co/skillupjapan/manabook/api/test/CategoryApiTest.java:8:1 Avoid unused imports such as 'jp.co.skillupjapan.manabook.api.converter.ManabookMapper'
pmd: warning /home/ryujin/Projects/Manabook/manabook-sdk/src/androidTest/java/jp/co/skillupjapan/manabook/api/test/CategoryApiTest.java:11:1 Avoid unused imports such as 'jp.co.skillupjapan.manabook.api.models.Response'
pmd: warning /home/ryujin/Projects/Manabook/manabook-sdk/src/androidTest/java/jp/co/skillupjapan/manabook/api/test/CategoryApiTest.java:13:1 Avoid unused imports such as 'jp.co.skillupjapan.manabook.api.util.Constants'
pmd: warning /home/ryujin/Projects/Manabook/manabook-sdk/src/androidTest/java/jp/co/skillupjapan/manabook/api/test/CategoryApiTest.java:14:8 Avoid duplicate imports such as 'jp.co.skillupjapan.manabook.api.ManabookFactory'
pmd: warning /home/ryujin/Projects/Manabook/manabook-sdk/src/androidTest/java/jp/co/skillupjapan/manabook/api/test/CategoryApiTest.java:15:1 Avoid unused imports such as 'java.util.List'
pmd: warning /home/ryujin/Projects/Manabook/manabook-sdk/src/androidTest/java/jp/co/skillupjapan/manabook/api/test/CategoryApiTest.java:16:1 Avoid unused imports such as 'java.util.Map'
pmd: warning /home/ryujin/Projects/Manabook/manabook-sdk/src/androidTest/java/jp/co/skillupjapan/manabook/api/test/CategoryApiTest.java:36:9 System.out.print is used
pmd: warning /home/ryujin/Projects/Manabook/manabook-sdk/src/androidTest/java/jp/co/skillupjapan/manabook/api/test/ContentGroupApiTest.java:3:1 Avoid unused imports such as 'jp.co.skillupjapan.manabook.api.models.Book'
pmd: warning /home/ryujin/Projects/Manabook/manabook-sdk/src/androidTest/java/jp/co/skillupjapan/manabook/api/test/ContentGroupApiTest.java:6:1 Avoid unused imports such as 'jp.co.skillupjapan.manabook.api.util.Constants'
pmd: warning /home/ryujin/Projects/Manabook/manabook-sdk/src/androidTest/java/jp/co/skillupjapan/manabook/api/test/ContentGroupApiTest.java:7:1 Avoid unused imports such as 'jp.co.skillupjapan.manabook.api.ManabookFactory'
pmd: warning /home/ryujin/Projects/Manabook/manabook-sdk/src/androidTest/java/jp/co/skillupjapan/manabook/api/test/ContentGroupApiTest.java:8:1 Avoid unused imports such as 'java.util.List'
pmd: warning /home/ryujin/Projects/Manabook/manabook-sdk/src/androidTest/java/jp/co/skillupjapan/manabook/api/test/DeviceApiTest.java:7:1 Avoid unused imports such as 'jp.co.skillupjapan.manabook.api.util.Constants'
pmd: warning /home/ryujin/Projects/Manabook/manabook-sdk/src/androidTest/java/jp/co/skillupjapan/manabook/api/test/HeaderApiTest.java:7:1 Avoid unused imports such as 'jp.co.skillupjapan.manabook.api.util.Constants'
pmd: warning /home/ryujin/Projects/Manabook/manabook-sdk/src/androidTest/java/jp/co/skillupjapan/manabook/api/test/HelloTest.java:8:1 Avoid unused imports such as 'jp.co.skillupjapan.manabook.api.models.Response'
pmd: warning /home/ryujin/Projects/Manabook/manabook-sdk/src/androidTest/java/jp/co/skillupjapan/manabook/api/test/HelloTest.java:12:1 Avoid unused imports such as 'java.util.List'
pmd: warning /home/ryujin/Projects/Manabook/manabook-sdk/src/androidTest/java/jp/co/skillupjapan/manabook/api/test/UserApiTest.java:8:1 Avoid unused imports such as 'jp.co.skillupjapan.manabook.api.util.Constants'
pmd: warning /home/ryujin/Projects/Manabook/manabook-sdk/src/androidTest/java/jp/co/skillupjapan/manabook/api/test/util/MockFileDispatcher.java:166:9 Avoid empty catch blocks
pmd: warning /home/ryujin/Projects/Manabook/manabook-sdk/src/main/java/jp/co/skillupjapan/manabook/api/ManabookFactory.java:21:1 No need to import a type that lives in the same package
pmd: warning /home/ryujin/Projects/Manabook/manabook-sdk/src/main/java/jp/co/skillupjapan/manabook/api/cache/DownloadTask.java:10:1 Avoid unused imports such as 'jp.co.skillupjapan.manabook.api.ManabookFactory'
pmd: warning /home/ryujin/Projects/Manabook/manabook-sdk/src/main/java/jp/co/skillupjapan/manabook/api/cache/ManabookCache.java:924:5 Avoid using if statements without curly braces
pmd: warning /home/ryujin/Projects/Manabook/manabook-sdk/src/main/java/jp/co/skillupjapan/manabook/api/models/Book.java:7:1 Avoid unused imports such as 'android.util.Log'
pmd: warning /home/ryujin/Projects/Manabook/manabook-sdk/src/main/java/jp/co/skillupjapan/manabook/api/models/Category.java:5:1 Avoid unused imports such as 'com.fasterxml.jackson.annotation.JsonIgnore'
pmd: warning /home/ryujin/Projects/Manabook/manabook-sdk/src/main/java/jp/co/skillupjapan/manabook/api/models/Category.java:10:1 Avoid unused imports such as 'java.util.Collections'
pmd: warning /home/ryujin/Projects/Manabook/manabook-sdk/src/main/java/jp/co/skillupjapan/manabook/api/models/ContentGroup.java:5:1 Avoid unused imports such as 'com.fasterxml.jackson.annotation.JsonIgnore'
pmd: warning /home/ryujin/Projects/Manabook/manabook-sdk/src/main/java/jp/co/skillupjapan/manabook/api/models/ContentGroup.java:8:1 Avoid unused imports such as 'java.util.ArrayList'
pmd: warning /home/ryujin/Projects/Manabook/manabook-sdk/src/main/java/jp/co/skillupjapan/manabook/api/models/ContentGroup.java:9:1 Avoid unused imports such as 'java.util.List'
pmd: warning /home/ryujin/Projects/Manabook/manabook-sdk/src/main/java/jp/co/skillupjapan/manabook/api/models/ManabookDate.java:5:1 Avoid unused imports such as 'java.util.TimeZone'
pmd: warning /home/ryujin/Projects/Manabook/manabook-sdk/src/main/java/jp/co/skillupjapan/manabook/api/models/ManabookDate.java:7:1 Avoid importing anything from the package java.lang
pmd: warning /home/ryujin/Projects/Manabook/manabook-sdk/src/main/java/jp/co/skillupjapan/manabook/api/models/ManabookModel.java:96:13 Useless parentheses.
pmd: warning /home/ryujin/Projects/Manabook/manabook-sdk/src/main/java/jp/co/skillupjapan/manabook/api/models/ManabookModel.java:97:9 Useless parentheses.
pmd: warning /home/ryujin/Projects/Manabook/manabook-sdk/src/main/java/jp/co/skillupjapan/manabook/api/models/Meta.java:68:10 A getX() method which returns a boolean should be named isX()
pmd: warning /home/ryujin/Projects/Manabook/manabook-sdk/src/main/java/jp/co/skillupjapan/manabook/api/models/User.java:98:10 A getX() method which returns a boolean should be named isX()
